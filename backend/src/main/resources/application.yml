spring:

  profiles:
    active:
#      - generatedSwaggerUI
    include:
      - inmemorydb  # For development phase, we use in memory DB to avoid need to migrate data as DB schema evolves during development
      - http2
      - hateoas

  security:
    oauth2:
      authorizationserver:
        endpoint:
          oidc:
            user-info-uri: /oidc/userinfo
          authorization-uri: /oauth/authorize
          token-uri: /oauth/token
        client:
          1000:
            registration:
              client-id: "klabiswiki"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_jwt"
                - "client_secret_post"
              #  - none
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "https://wiki.zabiny.club/auth/oidc.callback"
                - "https://klabis-api-docs.otakar.io/oauth2-redirect.html"
              post-logout-redirect-uris:
                - "https://wiki.zabiny.club"
              scopes:
                - "openid"
                - "profile"
                - "email"
            #require-authorization-consent: true
          1100:
            registration:
              client-id: "frontend"
              client-secret: "{noop}fesecret"
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_jwt"
                - "client_secret_post"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "https://klabis.otakar.io/auth/callback"
                - "http://localhost:8788/auth/callback"
                - "http://localhost:5173/auth/callback"
                - "https://localhost:8443/login/oauth2/code/klabis"
              post-logout-redirect-uris:
                - "https://klabis.otakar.io"
                - "http://localhost:8788"
                - "http://localhost:5173"
              scopes:
                - "openid"
                - "profile"
                - "email"
            require-proof-key: true
            token:
              reuse-refresh-tokens: false
              refresh-token-time-to-live: P5D   # 5 days
              access-token-time-to-live: PT1H   # 1 hour
          2000:
            registration:
              client-id: "test"
              client-secret: "{noop}test"
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "https://localhost:8443/login/oauth2/code/klabis"
                - "https://klabis-auth.polach.cloud/login/oauth2/code/klabis"
                - "http://klabis-auth.polach.cloud/login/oauth2/code/klabis"
                - "https://localhost:8443/swagger-ui/oauth2-redirect.html"
                - "https://klabis-auth.polach.cloud/swagger-ui/oauth2-redirect.html"
                - "https://klabis-api-docs.otakar.io/oauth2-redirect.html"
              #              post-logout-redirect-uris:
              #                - "https://wiki.zabiny.club"
              scopes:
                - "openid"
                - "profile"
                - "email"
          #            require-authorization-consent: true
            token:
              reuse-refresh-tokens: false
              refresh-token-time-to-live: P5D   # 5 days
              access-token-time-to-live: PT1H   # 1 hour
          3000:
            registration:
              client-id: "apispec"
              client-secret: "{noop}apispec"
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "https://localhost:8443/swagger-ui/oauth2-redirect.html"
                - "https://klabis-auth.polach.cloud/swagger-ui/oauth2-redirect.html"
                - "https://klabis-api-docs.otakar.io/oauth2-redirect.html"
              scopes:
                - "openid"

      client:
        registration: # configurations are used by authorization server's login page - "Resource" server has hardcoded single registration - klabis OIDC
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
          #              - profile
          #              - email

          #facebook:
          #  client-id: ${FACEBOOK_CLIENT_ID}
          #  client-secret: ${FACEBOOK_CLIENT_SECRET}
          #github:
          #  client-id: ${GITHUB_CLIENT_ID}
          #  client-secret: ${GITHUB_CLIENT_SECRET}
          #  scope:
#              - openid
          #    - profile
  jpa:
    hibernate:
      ddl-auto: validate  # pro persistentni DB pouze zvalidovat schema databaze

logging:
  level:
    #org.springframework.security: TRACE
    #org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter: TRACE
    #org.springframework.security.oauth2.server: TRACE
    #org.springframework.security.oauth2.client: trace
    org.springframework.security.jackson2.SecurityJackson2Modules: INFO
    org.springframework.security.web.savedrequest.HttpSessionRequestCache: TRACE
    #org.springframework.web.client.RestTemplate: DEBUG
    #REQUESTS_LOGGER: TRACE
    org.zalando.logbook: INFO
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%X{URL}){magenta} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"

management:
  endpoint:
    loggers:
      enabled: true
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        #include: loggers, caches, configprops, env, flyway, httpexchanges, info, mappings, scheduledtasks
        include: loggers, caches, env, info, mappings, health

springdoc:
  swagger-ui:
    oauth:
      client-id: apispec
      client-secret: apispec
    url: /klabis-api-spec.yaml

---
spring:
  config:
    activate:
      on-profile: inmemorydb

  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration

# at this moment using custom InMemory repositories
#  datasource:
#    url: jdbc:h2:mem:klabis

  h2:
    console:
      enabled: off

  jpa:
    hibernate:
      ddl-auto: create  # H2 DB used in default so far has some quirks against PostgreSQL syntax (for example TINYINT vs SMALLINT for enums)

---
spring:
  config:
    activate:
      on-profile: generatedSwaggerUI

springdoc:
  #show-actuator: true
  api-docs:
    groups:
      enabled: true
  group-configs:
    - group: klabis
      display-name: Klabis API
      packages-to-scan:
        - club.klabis.api
    - group: c-actuator
      display-name: System monitoring endpoints
      paths-to-match:
        - /actuator/**

---

spring:
  config:
    activate:
      on-profile: http2

server:
  http2:
    enabled: true
  ssl:
    key-store: classpath:https/keystore.p12
    key-store-password: secret
    #key-password: another-secret
    key-store-type: PKCS12
    key-alias: klabisSSL
  port: 8443

---

spring:
  config:
    activate:
      on-profile: hateoas

  hateoas:
    use-hal-as-default-json-media-type: false

server:
  forward-headers-strategy: framework # For hateoas proper URL hostname detection

