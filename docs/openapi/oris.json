{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "ORIS",
      "description": "Integration endpoints with ORIS - https://oris.orientacnisporty.cz/"
    }
  ],
  "paths": {
    "/oris/synchronizeEvents": {
      "post": {
        "tags": [
          "ORIS"
        ],
        "summary": "Triggers events synchronization with ORIS",
        "description": "#### Required authorization requires `system:admin` grant ",
        "operationId": "orisSynchronizeEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SynchronizeEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully triggered events synchronization"
          },
          "401": {
            "description": "Missing required user authentication or authentication failed"
          },
          "403": {
            "description": "User is not allowed to perform requested operation"
          }
        },
        "security": [
          {
            "klabis": [
              "openapi"
            ]
          }
        ]
      }
    },
    "/oris/userInfo/{regNum}": {
      "get": {
        "tags": [
          "ORIS"
        ],
        "summary": "Get information about user from ORIS",
        "description": "#### Required authorization requires `members:register` grant ",
        "operationId": "orisUserInfoRegNumGet",
        "parameters": [
          {
            "name": "regNum",
            "in": "path",
            "description": "Registration number of user to retrieve ORIS data about",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{3}[0-9]{4}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Available information about user read from ORIS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ORISUserInfo"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ORISUserInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersMemberIdEditMemberInfoFormGet400ResponseApiDto"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersMemberIdEditMemberInfoFormGet400ResponseApiDto"
                }
              }
            }
          },
          "401": {
            "description": "Missing required user authentication or authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RFC7807ErrorResponseApiDto"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RFC7807ErrorResponseApiDto"
                }
              }
            }
          },
          "403": {
            "description": "User is not allowed to perform requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersMemberIdEditMemberInfoFormGet403ResponseApiDto"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/MembersMemberIdEditMemberInfoFormGet403ResponseApiDto"
                }
              }
            }
          },
          "404": {
            "description": "Missing required user authentication or authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RFC7807ErrorResponseApiDto"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/RFC7807ErrorResponseApiDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "klabis": [
              "openapi"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SynchronizeEventsRequest": {
        "type": "object",
        "description": "DTO containing event IDs to synchronize",
        "properties": {
          "eventIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "media": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ORISUserInfo": {
        "type": "object",
        "description": "User data retrieved from ORIS    #### Required authorization - requires `members:register` grant",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "firstName": {
            "type": "string",
            "description": "First name of the club member"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the club member"
          },
          "registrationNumber": {
            "type": "string",
            "description": "ORIS registration number",
            "pattern": "^[A-Z]{3}[0-9]{4}$"
          },
          "orisId": {
            "type": "integer",
            "format": "int32",
            "description": "Oris ID of registered orienteering runner"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "registrationNumber"
        ]
      },
      "MembersMemberIdEditMemberInfoFormGet400ResponseAllOfValidationErrorsInnerApiDto": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "fieldName": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "MembersMemberIdEditMemberInfoFormGet400ResponseApiDto": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "title": {
            "type": "string",
            "description": "Description of the error status"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "error status value"
          },
          "detail": {
            "type": "string",
            "description": "User friendly description of the error"
          },
          "instance": {
            "type": "string",
            "description": "URI of the resource which has thrown the error"
          },
          "type": {
            "type": "string"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembersMemberIdEditMemberInfoFormGet400ResponseAllOfValidationErrorsInnerApiDto"
            }
          }
        },
        "required": [
          "detail",
          "instance",
          "status",
          "title"
        ]
      },
      "RFC7807ErrorResponseApiDto": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "title": {
            "type": "string",
            "description": "Description of the error status"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "error status value"
          },
          "detail": {
            "type": "string",
            "description": "User friendly description of the error"
          },
          "instance": {
            "type": "string",
            "description": "URI of the resource which has thrown the error"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "detail",
          "instance",
          "status",
          "title"
        ]
      },
      "MembersMemberIdEditMemberInfoFormGet403ResponseAllOfMissingGrantApiDto": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "MembersMemberIdEditMemberInfoFormGet403ResponseApiDto": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "title": {
            "type": "string",
            "description": "Description of the error status"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "error status value"
          },
          "detail": {
            "type": "string",
            "description": "User friendly description of the error"
          },
          "instance": {
            "type": "string",
            "description": "URI of the resource which has thrown the error"
          },
          "type": {
            "type": "string"
          },
          "missingGrant": {
            "$ref": "#/components/schemas/MembersMemberIdEditMemberInfoFormGet403ResponseAllOfMissingGrantApiDto"
          }
        },
        "required": [
          "detail",
          "instance",
          "status",
          "title"
        ]
      }
    },
    "securitySchemes": {
      "security_auth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/oauth/authorize",
            "tokenUrl": "/oauth/token",
            "scopes": {}
          }
        }
      }
    }
  }
}